<?xml version='1.0' encoding='UTF-8'?>
<testsuite name='' hostname='localhost' tests='59' failures='0' skipped='0' errors='0' time='0.678' timestamp='2021-11-16T08:57:25'>
  <properties />
  <testcase name='testCancellingCoroutineDoesNotGetUpdates' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.056' />
  <testcase name='testFlowDoesNotCollectIfLifecycleIsDestroyed' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.003' />
  <testcase name='testFlowStartsInSubsequentLifecycleState' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.004' />
  <testcase name='testDestroyedLifecycleDoesNotGetUpdates' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.004' />
  <testcase name='testCollectionRestartsWithFlowThatDoesNotComplete' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.012' />
  <testcase name='testCollectionRestartsWithAHotFlow' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.009' />
  <testcase name='testOnEachBeforeOperatorOnlyExecutesInTheRightState' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.011' />
  <testcase name='testFiniteFlowCompletes' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.006' />
  <testcase name='testExtensionFailsWithInitializedState' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.006' />
  <testcase name='testCollectionRestartsWithFlowThatCompletes' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.007' />
  <testcase name='testExtensionDoesNotCollectInDestroyedState' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.006' />
  <testcase name='testWithLaunchIn' classname='androidx.lifecycle.FlowWithLifecycleTest' time='0.005' />
  <testcase name='runSynchronously' classname='androidx.lifecycle.LaunchWhenTest' time='0.008' />
  <testcase name='throwException_thenRunAnother' classname='androidx.lifecycle.PausingDispatcherTest' time='0.015' />
  <testcase name='pause_thenFinish' classname='androidx.lifecycle.PausingDispatcherTest' time='0.013' />
  <testcase name='yieldImmediateTest' classname='androidx.lifecycle.PausingDispatcherTest' time='0.009' />
  <testcase name='launchWhenCreated' classname='androidx.lifecycle.PausingDispatcherTest' time='0.01' />
  <testcase name='innerJobCancelsParent' classname='androidx.lifecycle.PausingDispatcherTest' time='0.009' />
  <testcase name='launchWhenResumed' classname='androidx.lifecycle.PausingDispatcherTest' time='0.012' />
  <testcase name='pause_thenResume' classname='androidx.lifecycle.PausingDispatcherTest' time='0.016' />
  <testcase name='cancel' classname='androidx.lifecycle.PausingDispatcherTest' time='0.026' />
  <testcase name='lifecycleInsideLifecycle_innerFails' classname='androidx.lifecycle.PausingDispatcherTest' time='0.017' />
  <testcase name='innerThrowException' classname='androidx.lifecycle.PausingDispatcherTest' time='0.036' />
  <testcase name='launchWhenStarted' classname='androidx.lifecycle.PausingDispatcherTest' time='0.018' />
  <testcase name='innerScopeFailure' classname='androidx.lifecycle.PausingDispatcherTest' time='0.016' />
  <testcase name='moveToAnotherDispatcher' classname='androidx.lifecycle.PausingDispatcherTest' time='0.046' />
  <testcase name='cancelInnerCoroutine' classname='androidx.lifecycle.PausingDispatcherTest' time='0.016' />
  <testcase name='basic' classname='androidx.lifecycle.PausingDispatcherTest' time='0.017' />
  <testcase name='lifecycleInsideLifecycle' classname='androidx.lifecycle.PausingDispatcherTest' time='0.018' />
  <testcase name='catchFinishWhileDelayed' classname='androidx.lifecycle.PausingDispatcherTest' time='0.015' />
  <testcase name='finishWhileDelayed' classname='androidx.lifecycle.PausingDispatcherTest' time='0.021' />
  <testcase name='runInsideMain' classname='androidx.lifecycle.PausingDispatcherTest' time='0.009' />
  <testcase name='yieldLoop' classname='androidx.lifecycle.PausingDispatcherTest' time='0.012' />
  <testcase name='yieldTest' classname='androidx.lifecycle.PausingDispatcherTest' time='0.023' />
  <testcase name='alreadyFinished' classname='androidx.lifecycle.PausingDispatcherTest' time='0.015' />
  <testcase name='pauseThenContinue' classname='androidx.lifecycle.PausingDispatcherTest' time='0.027' />
  <testcase name='parentJobCancelled' classname='androidx.lifecycle.PausingDispatcherTest' time='0.02' />
  <testcase name='testBlockRunsOnSubsequentLifecycleState' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.005' />
  <testcase name='testExceptionWithInitializedState' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.01' />
  <testcase name='testBlockDoesNotStartWithDestroyedState' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.005' />
  <testcase name='testBlockDoesNotStartIfLifecycleIsDestroyed' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.003' />
  <testcase name='testBlockRunsWhenResumedStateIsReached' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.006' />
  <testcase name='testBlockIsCancelledWhenLifecycleIsDestroyed' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.005' />
  <testcase name='testBlockRunsWhenStartedStateIsReached' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.003' />
  <testcase name='testBlockRunsWhenLogicUsesWithContext' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.006' />
  <testcase name='testCancellingACustomJobCanBeHandled' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.005' />
  <testcase name='testBlocksRepeatsExecution' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.006' />
  <testcase name='testCancellingTheReturnedJobCancelsTheBlock' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.004' />
  <testcase name='testCancellingTheJobDoesNotRestartTheBlockOnNewStates' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.006' />
  <testcase name='testBlocksRepeatsExecutionSerially' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.006' />
  <testcase name='testCancellingACustomJobDoesNotReRunThatBlock' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.006' />
  <testcase name='testBlockRunsWhenCreatedStateIsReached' classname='androidx.lifecycle.RepeatOnLifecycleTest' time='0.005' />
  <testcase name='getAncestorOwner' classname='androidx.lifecycle.ViewTreeLifecycleOwnerTest' time='0.005' />
  <testcase name='shadowedOwner' classname='androidx.lifecycle.ViewTreeLifecycleOwnerTest' time='0.003' />
  <testcase name='setGetSameView' classname='androidx.lifecycle.ViewTreeLifecycleOwnerTest' time='0.003' />
  <testcase name='testBlockCancelledWhenDestroyedWhileSuspended' classname='androidx.lifecycle.WithLifecycleStateTest' time='0.005' />
  <testcase name='testBlockCancelledWhenInitiallyDestroyed' classname='androidx.lifecycle.WithLifecycleStateTest' time='0.002' />
  <testcase name='testInitialResumed' classname='androidx.lifecycle.WithLifecycleStateTest' time='0.002' />
  <testcase name='testBlockRunsWithLifecycleStateChange' classname='androidx.lifecycle.WithLifecycleStateTest' time='0.004' />
</testsuite>
